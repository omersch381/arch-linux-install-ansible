---
- name: Ensure zsh package is installed
  pacman:
    name: zsh
    state: latest

- name: Ensure zsh is the non root user's shell
  user:
    name: "{{ hostname }}"
    shell: /usr/bin/zsh

- name: Ensure oh-my-zsh is installed
  become: true
  become_user: "{{ hostname }}"
  shell:
    cmd: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

- name: Ensure zsh autosuggestions is downloaded
  become: true
  become_user: "{{ hostname }}"
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: /home/{{ hostname }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions

- name: Ensure zsh powerlevel10k theme is downloaded
  become: true
  become_user: "{{ hostname }}"
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: /home/{{ hostname }}/.oh-my-zsh/custom/themes/powerlevel10k
    depth: 1

- name: Ensure zsh fzf is downloaded
  become: true
  become_user: "{{ hostname }}"
  git:
    repo: https://github.com/junegunn/fzf.git
    dest: /home/{{ hostname }}/.fzf
    depth: 1

- name: Ensure zsh fzf is installed
  become: true
  become_user: "{{ hostname }}"
  command:
    cmd: /home/{{ hostname }}/.fzf/install

- name: Recursively change ownership of a directory
  ansible.builtin.file:
    path: /home/{{ hostname }}
    state: directory
    recurse: yes
    owner: "{{ hostname }}"
    group: users

- name: Ensure oh-my-zsh using the powerlevel10k theme
  lineinfile:
    line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
    path: /home/{{ hostname }}/.zshrc
    regexp: "^(ZSH_THEME)"

- name: Remove the default plugins oh-my-zsh provide
  lineinfile:
    path: /home/{{ hostname }}/.zshrc
    state: absent
    regexp: "plugins=(git)"

- name: Insert my plugins for oh-my-zsh to be used
  blockinfile:
    path: /home/{{ hostname }}/.zshrc
    insertbefore: 'source $ZSH/oh-my-zsh.sh'
    block: |
      plugins=(
      git
      zsh-autosuggestions
      sudo
      dirhistory
      )

- name: Ensure fzf files are being sourced
  blockinfile:
    path: /home/{{ hostname }}/.zshrc
    insertafter: EOF
    block: |
      source ~/.fzf/shell/key-bindings.zsh
      source ~/.fzf/shell/completion.zsh

- name: Ensure .zprofile exists
  copy:
    src: /etc/zsh/zprofile
    dest: /home/{{ hostname }}/.zprofile

- name: Ensure .zprofile starts Xorg
  blockinfile:
    path: /home/{{ hostname }}/.zprofile
    block: |
      if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
              startx
      fi
